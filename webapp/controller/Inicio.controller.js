sap.ui.define(["sap/ui/core/mvc/Controller"], function (Controller) {
	"use strict";
	return Controller.extend("arcelor.controller.Inicio", {

		onAfterRendering: function () {
			var filters = [];
			var filter = "";
			filter = new sap.ui.model.Filter("cod_dist", sap.ui.model.FilterOperator.EQ, "");
			filters.push(filter);

			try {
				var oThis = this;
				var oUser = sap.ui2.shell.getUser();

				oUser.load({}, function () {
					oThis.byId("idUsuario").setText(oUser.getId());
					oThis.byId("nomeUsuario").setText(oUser.getFirstName());

					var oModelUser = {
						"id": oUser.getId(),
						"name": oUser.getFullName(),
						"system": oUser.getSystem()
					};

					sap.ui.getCore().setModel(oModelUser, "modelUser");

				}, function () {
					alert("Erro ao obter dados do usuário.");
				});
			} catch {

			};
		},

		onInit: function () {
			
		},

		onPressMenuButton: function () {
			let menu = sap.ui.getCore().byId("__component0---app--idAppControl-Master");

			if (menu.hasStyleClass("menuFechado")) {
				menu.setWidth("170px");
				menu.removeStyleClass("menuFechado");
				menu.addStyleClass("menuAberto");
			} else {
				menu.setWidth("0");
				menu.removeStyleClass("menuAberto");
				menu.addStyleClass("menuFechado")
			}
		},

		_openNav: function () {
			let menu = sap.ui.getCore().byId("__component0---app--idAppControl-Master");
			menu.setWidth("170px");
			menu.removeStyleClass("menuFechado");
			menu.addStyleClass("menuAberto");
		},

		onChangeloja: function (Evt) {
			var oModel = this.getView().getModel();
			oModel.update("/atualiza_lojaSet(cod_dist='" + Evt.mParameters.selectedItem.mProperties.key + "')", oData, {
				success: function (success, response, odata) {
					thisView.getView().setBusy(false);
					var hdrMessage = response.headers["sap-message"];
					var hdrMessageObject = JSON.parse(hdrMessage);
					MessageToast.show(hdrMessageObject.message);
				},
				error: function (oError, response) {
					thisView.getView().setBusy(false);
					var hdrMessage = $(oError.responseText).find("message").first().text();
					MessageToast.show(hdrMessage);
				}
			})
			this.CentroLoja = new sap.ui.model.json.JSONModel();
			var loja = [];
			loja.push({
				loja: Evt.mParameters.selectedItem.mProperties.key
			})
			this.CentroLoja.setData(loja);
			sap.ui.getCore().setModel(this.CentroLoja, "centroloja");
		},

		authControl: function () {
			var oData = new sap.ui.model.odata.ODataModel("/sap/opu/odata/sap/ZCHSD_VENDASVAREJO_SRV/");
			oData.read("/AuthSet", null, null, false, function (oData, Response) {
				console.table(Response);
				console.table(oData.results[0]);
				if (Response.statusCode === 200) {
					applyAuthMap(oData.results);
				}
			});
		},

		authControlComponent: function (authKey) {
			var oData = new sap.ui.model.odata.ODataModel("/sap/opu/odata/sap/ZCHSD_VENDASVAREJO_SRV/");
			oData.read("/AuthSet", null, null, false, function (oData, Response) {
				console.table(Response);
				console.table(oData.results[0]);
				if (Response.statusCode === 200) {
					return applyAuthComponent(oData.results, authKey);
				}
			});
			return true;
		},

		authControlRoute: function (url) {
			var oThis = this;
			var autorizado = true;
			var oData = new sap.ui.model.odata.ODataModel("/sap/opu/odata/sap/ZCHSD_VENDASVAREJO_SRV/");
			oData.read("/AuthSet", null, null, false, function (oData, Response) {
				console.table(Response);
				console.table(oData.results[0]);
				if (Response.statusCode === 200) {
					autorizado = isAuthRoute(url, oData.results);
				}
			});

			if (!autorizado) {
				// Forçar Abrir o menu caso o usuário tenha fechado antes de cair na tela de unauthorized
				this._openNav();
			}

			return autorizado;
		},

		_navToUnauthorized: function () {
			this.getRouter().getTargets().display("notFound");
		},

		_navBack: function () {
			//This code was generated by the layout editor.
			var oHistory = sap.ui.core.routing.History.getInstance(),
				sPreviousHash = oHistory.getPreviousHash();

			this.getView().unbindObject();
			if (sPreviousHash !== undefined) {
				history.go(-1);
			} else {
				this.getRouter().getTargets().display("master");
			}
		}
	});
});